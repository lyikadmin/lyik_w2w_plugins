from lyikpluginmanager import (
    getProjectName,
    NSDLDematSpec,
    NSDLRquestModel,
    Instr,
    BankDetails,
    BankAddress,
    BeneficiaryDetails,
    PrimaryBeneficiary,
    JointHolder,
    AdditionalBeneficiaryDetails,
    Nominee,
    NomineeIdentificationDetails,
    Address,
    GenericFormRecordModel,
)
from .nsdl_demat_model.form_record_mpdel import (
    FormRecordModel,
    TradingInformation,
)
import json


def map_form_record(form_record_model: FormRecordModel) -> NSDLRquestModel:
    """
    This function maps the form record model to the NSDL root model and returns.
    """

    holder = form_record_model.kyc_holders[0].kyc_holder
    nsdl_model = NSDLRquestModel(
        instr=Instr(
            beneficiaryDetails=BeneficiaryDetails(
                primaryBeneficiary=PrimaryBeneficiary(
                    name=holder.identity_address_verification.identity_address_info.name,
                    shortName=holder.identity_address_verification.identity_address_info.name,
                    pan=holder.pan_verification.pan_details.pan_number,
                    panFlag="Y",
                    grossAnnualIncome=holder.declarations.income_info.gross_annual_income,
                    dob=holder.pan_verification.pan_details.dob_pan,  # Client DOB with YYYYMMDD format.
                    gender=holder.identity_address_verification.identity_address_info.gender,
                    aadhar=holder.identity_address_verification.identity_address_info.uid,
                    mobile=holder.mobile_email_verification.mobile_verification.contact_id,
                    email=holder.mobile_email_verification.email_verification.contact_id,
                    ddpiid=None,
                    eStatement="E",
                    dematAccType="04",
                    dematAccSubType="01",
                    rbiRefNo="12345",
                    rbiApprovalDate="20201222",
                    modeOfOperation="1",
                    communicationToBeSend="2",
                    beneficiaryCoresAddress=Address(
                        addressType="1",
                        addressLine1="",
                        addressLine2="",
                        addressLine3="",
                        addressLine4="",
                        zipcode="",
                        city="",
                        statecode="",
                        countrycode="",
                    ),
                    beneficiaryPermAddress=Address(
                        addressType="",
                        addressLine1="",
                        addressLine2="",
                        addressLine3="",
                        addressLine4="",
                        zipcode="",
                        city="",
                        statecode="",
                        countrycode="",
                    ),
                    signature="",
                ),
                numOfJointHolders="",
                listOfJointHolders=[
                    JointHolder(
                        seq="",
                        name="",
                        pan="",
                        panFlag="",
                        dob="",
                        mobileNo="",
                        emailId="",
                        smsfacility="",
                    )
                ],
                additionalBeneDetails=AdditionalBeneficiaryDetails(
                    familyMobileFlag="",
                    familyEmailFlag="",
                    nominationOption="",
                    occupation=None,
                    fatherOrHusbandName="",
                    dpId="",
                    clientId="",
                    sharePercentEqually="",
                    numOfNominees="",
                    listOfNominees=[
                        Nominee(
                            seqNo="",
                            nomineeName="",
                            relationWithNominee="",
                            nomineeAddress=Address(
                                addressType="",
                                addressLine1="",
                                addressLine2="",
                                addressLine3="",
                                addressLine4="",
                                zipcode="",
                                city="",
                                statecode="",
                                countrycode="",
                            ),
                            nomineeMobileNum="",
                            nomineeEmailId="",
                            nomineeShare=None,
                            nomineeIdentificationDtls=NomineeIdentificationDetails(
                                pan="",
                                aadhar="",
                                savingBankAccNo="",
                                dematAccId="",
                            ),
                            minor="",
                            dob="",
                            guardianName="",
                            guardianAddress=Address(
                                addressType="",
                                addressLine1="",
                                addressLine2="",
                                addressLine3="",
                                addressLine4="",
                                zipcode="",
                                city="",
                                statecode="",
                                countrycode="",
                            ),
                            guardianMobileNum="",
                            guardianEmailId="",
                            guardianRelationship="",
                            guardianIdentificationDtls=NomineeIdentificationDetails(
                                pan="",
                                aadhar="",
                                savingBankAccNo="",
                                dematAccId="",
                            ),
                        )
                    ],
                ),
            ),
            bankDetails=BankDetails(
                accountNumber="",
                bankName="",
                ifsc="",
                micr="",
                accountType="",
                bankAddress=BankAddress(
                    addressType="",
                    addressLine1="",
                    addressLine2="",
                    addressLine3="",
                    addressLine4="",
                    zipcode="",
                ),
            ),
        )
    )
    return nsdl_model
